// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/google/wire"
	"github.com/haerul-umam/capstone-project-mikti/app"
	"github.com/haerul-umam/capstone-project-mikti/controller"
	"github.com/haerul-umam/capstone-project-mikti/helper"
	"github.com/haerul-umam/capstone-project-mikti/repository"
	"github.com/haerul-umam/capstone-project-mikti/service"
	"github.com/labstack/echo/v4"
)

// Injectors from injector.go:

func StartServer() *echo.Echo {
	db := app.InitConnetion()
	userRepositoryImpl := repository.NewUserRepository(db)
	tokenUseCaseImpl := helper.NewTokenUseCase()
	userServiceImpl := service.NewUserService(userRepositoryImpl, tokenUseCaseImpl)
	authControllerImpl := controller.NewAuthController(userServiceImpl)
	orderRepositoryImpl := repository.NewOrderRepository(db)
	eventRepositoryImpl := repository.NewEventRepository(db)
	orderServiceImpl := service.NewOrderService(orderRepositoryImpl, eventRepositoryImpl)
	orderControllerImpl := controller.NewOrderController(orderServiceImpl, tokenUseCaseImpl)
	categoryRepositoryImpl := repository.NewCategoryRepository(db)
	eventServiceImpl := service.NewEventService(eventRepositoryImpl, categoryRepositoryImpl)
	eventControllerImpl := controller.NewEventController(eventServiceImpl)
	categoryServiceImpl := service.NewCategoryService(categoryRepositoryImpl)
	categoryContollerImpl := controller.NewCategoryController(categoryServiceImpl)
	echoEcho := app.Router(authControllerImpl, orderControllerImpl, eventControllerImpl, categoryContollerImpl)
	return echoEcho
}

// injector.go:

var authSet = wire.NewSet(repository.NewUserRepository, wire.Bind(new(repository.UserRepository), new(*repository.UserRepositoryImpl)), helper.NewTokenUseCase, wire.Bind(new(helper.TokenUseCase), new(*helper.TokenUseCaseImpl)), service.NewUserService, wire.Bind(new(service.UserService), new(*service.UserServiceImpl)), controller.NewAuthController, wire.Bind(new(controller.AuthController), new(*controller.AuthControllerImpl)))

var orderSet = wire.NewSet(repository.NewOrderRepository, wire.Bind(new(repository.OrderRepository), new(*repository.OrderRepositoryImpl)), service.NewOrderService, wire.Bind(new(service.OrderService), new(*service.OrderServiceImpl)), controller.NewOrderController, wire.Bind(new(controller.OrderController), new(*controller.OrderControllerImpl)))

var categorySet = wire.NewSet(repository.NewCategoryRepository, wire.Bind(new(repository.CategoryRepository), new(*repository.CategoryRepositoryImpl)), service.NewCategoryService, wire.Bind(new(service.CategoryService), new(*service.CategoryServiceImpl)), controller.NewCategoryController, wire.Bind(new(controller.CategoryEventController), new(*controller.CategoryContollerImpl)))

var eventSet = wire.NewSet(repository.NewEventRepository, wire.Bind(new(repository.EventRepository), new(*repository.EventRepositoryImpl)), service.NewEventService, wire.Bind(new(service.EventService), new(*service.EventServiceImpl)), controller.NewEventController, wire.Bind(new(controller.EventController), new(*controller.EventControllerImpl)))
